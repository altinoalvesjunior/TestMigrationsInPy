"commit_hash": "ed63b7ee9e68ba120893aaaaca0d4525a56ed484",
"commit_link": "https://github.com/allenai/allennlp/commit/ed63b7ee9e68ba120893aaaaca0d4525a56ed484",
"files": [".pylintrc", "allennlp/commands/elmo.py", "allennlp/commands/evaluate.py", "allennlp/common/testing/model_test_case.py", "allennlp/common/util.py", "allennlp/data/dataset.py", "allennlp/data/fields/array_field.py", "allennlp/data/fields/field.py", "allennlp/data/fields/index_field.py", "allennlp/data/fields/knowledge_graph_field.py", "allennlp/data/fields/label_field.py", "allennlp/data/fields/list_field.py", "allennlp/data/fields/metadata_field.py", "allennlp/data/fields/multilabel_field.py", "allennlp/data/fields/production_rule_field.py", "allennlp/data/fields/sequence_label_field.py", "allennlp/data/fields/span_field.py", "allennlp/data/fields/text_field.py", "allennlp/data/instance.py", "allennlp/data/iterators/data_iterator.py", "allennlp/data/iterators/epoch_tracking_bucket_iterator.py", "allennlp/models/biattentive_classification_network.py", "allennlp/models/coreference_resolution/coref.py", "allennlp/models/encoder_decoders/simple_seq2seq.py", "allennlp/models/model.py", "allennlp/models/reading_comprehension/bidaf.py", "allennlp/models/reading_comprehension/bidaf_ensemble.py", "allennlp/models/semantic_parsing/nlvr/nlvr_coverage_semantic_parser.py", "allennlp/models/semantic_parsing/nlvr/nlvr_decoder_state.py", "allennlp/models/semantic_parsing/nlvr/nlvr_decoder_step.py", "allennlp/models/semantic_parsing/nlvr/nlvr_direct_semantic_parser.py", "allennlp/models/semantic_parsing/nlvr/nlvr_semantic_parser.py", "allennlp/models/semantic_parsing/wikitables/wikitables_decoder_state.py", "allennlp/models/semantic_parsing/wikitables/wikitables_decoder_step.py", "allennlp/models/semantic_parsing/wikitables/wikitables_erm_semantic_parser.py", "allennlp/models/semantic_parsing/wikitables/wikitables_semantic_parser.py", "allennlp/models/semantic_role_labeler.py", "allennlp/modules/alternating_highway_lstm.py", "allennlp/modules/augmented_lstm.py", "allennlp/modules/conditional_random_field.py", "allennlp/modules/elmo.py", "allennlp/modules/elmo_lstm.py", "allennlp/modules/encoder_base.py", "allennlp/modules/lstm_cell_with_projection.py", "allennlp/modules/scalar_mix.py", "allennlp/modules/seq2seq_encoders/multi_head_self_attention.py", "allennlp/modules/seq2seq_encoders/pytorch_seq2seq_wrapper.py", "allennlp/modules/seq2vec_encoders/boe_encoder.py", "allennlp/modules/seq2vec_encoders/pytorch_seq2vec_wrapper.py", "allennlp/modules/similarity_functions/bilinear.py", "allennlp/modules/similarity_functions/multiheaded.py", "allennlp/modules/span_extractors/bidirectional_endpoint_span_extractor.py", "allennlp/modules/span_extractors/self_attentive_span_extractor.py", "allennlp/modules/token_embedders/elmo_token_embedder.py", "allennlp/modules/token_embedders/embedding.py", "allennlp/nn/activations.py", "allennlp/nn/decoding/beam_search.py", "allennlp/nn/decoding/checklist_state.py", "allennlp/nn/decoding/decoder_state.py", "allennlp/nn/decoding/decoder_trainers/expected_risk_minimization.py", "allennlp/nn/decoding/decoder_trainers/maximum_marginal_likelihood.py", "allennlp/nn/decoding/util.py", "allennlp/nn/initializers.py", "allennlp/nn/util.py", "allennlp/tests/common/registrable_test.py", "allennlp/tests/custom_extensions/alternating_highway_lstm_test.py", "allennlp/tests/data/dataset_test.py", "allennlp/tests/data/fields/array_field_test.py", "allennlp/tests/data/fields/index_field_test.py", "allennlp/tests/data/fields/knowledge_graph_field_test.py", "allennlp/tests/data/fields/label_field_test.py", "allennlp/tests/data/fields/list_field_test.py", "allennlp/tests/data/fields/multilabel_field_test.py", "allennlp/tests/data/fields/production_rule_field_test.py", "allennlp/tests/data/fields/sequence_label_field_test.py", "allennlp/tests/data/fields/span_field_test.py", "allennlp/tests/data/fields/text_field_test.py", "allennlp/tests/data/iterators/basic_iterator_test.py", "allennlp/tests/models/constituency_parser_test.py", "allennlp/tests/models/coreference_resolution/coref_test.py", "allennlp/tests/models/encoder_decoders/simple_seq2seq_test.py", "allennlp/tests/models/reading_comprehension/bidaf_ensemble_test.py", "allennlp/tests/models/reading_comprehension/bidaf_test.py", "allennlp/tests/models/semantic_parsing/nlvr/nlvr_coverage_semantic_parser_test.py", "allennlp/tests/models/semantic_parsing/wikitables/wikitables_decoder_step_test.py", "allennlp/tests/models/semantic_parsing/wikitables/wikitables_mml_semantic_parser_test.py", "allennlp/tests/modules/attention/legacy_attention_test.py", "allennlp/tests/modules/augmented_lstm_test.py", "allennlp/tests/modules/conditional_random_field_test.py", "allennlp/tests/modules/elmo_test.py", "allennlp/tests/modules/encoder_base_test.py", "allennlp/tests/modules/feedforward_test.py", "allennlp/tests/modules/highway_test.py", "allennlp/tests/modules/lstm_cell_with_projection_test.py", "allennlp/tests/modules/matrix_atttention/legacy_matrix_attention_test.py", "allennlp/tests/modules/maxout_test.py", "allennlp/tests/modules/scalar_mix_test.py", "allennlp/tests/modules/seq2seq_encoders/intra_sentence_attention_test.py", "allennlp/tests/modules/seq2seq_encoders/multi_head_self_attention_test.py", "allennlp/tests/modules/seq2seq_encoders/pass_through_encoder_test.py", "allennlp/tests/modules/seq2seq_encoders/pytorch_seq2seq_wrapper_test.py", "allennlp/tests/modules/seq2seq_encoders/stacked_self_attention_test.py", "allennlp/tests/modules/seq2vec_encoders/boe_encoder_test.py", "allennlp/tests/modules/seq2vec_encoders/cnn_encoder_test.py", "allennlp/tests/modules/seq2vec_encoders/pytorch_seq2vec_wrapper_test.py", "allennlp/tests/modules/similarity_functions/bilinear_test.py", "allennlp/tests/modules/similarity_functions/cosine_test.py", "allennlp/tests/modules/similarity_functions/dot_product_test.py", "allennlp/tests/modules/similarity_functions/linear_test.py", "allennlp/tests/modules/similarity_functions/multiheaded_test.py", "allennlp/tests/modules/span_extractors/bidirectional_endpoint_span_extractor_test.py", "allennlp/tests/modules/span_extractors/endpoint_span_extractor_test.py", "allennlp/tests/modules/span_extractors/self_attentive_span_extractor_test.py", "allennlp/tests/modules/span_pruner_test.py", "allennlp/tests/modules/stacked_alternating_lstm_test.py", "allennlp/tests/modules/stacked_bidirectional_lstm_test.py", "allennlp/tests/modules/stacked_elmo_lstm_test.py", "allennlp/tests/modules/text_field_embedders/basic_text_field_embedder_test.py", "allennlp/tests/modules/time_distributed_test.py", "allennlp/tests/modules/token_embedders/elmo_token_embedder_test.py", "allennlp/tests/modules/token_embedders/embedding_test.py", "allennlp/tests/modules/token_embedders/token_characters_encoder_test.py", "allennlp/tests/nn/decoding/beam_search_test.py", "allennlp/tests/nn/decoding/decoder_trainers/expected_risk_minimization_test.py", "allennlp/tests/nn/decoding/decoder_trainers/maximum_marginal_likelihood_test.py", "allennlp/tests/nn/decoding/simple_transition_system.py", "allennlp/tests/nn/initializers_test.py", "allennlp/tests/nn/regularizers_test.py", "allennlp/tests/nn/util_test.py", "allennlp/tests/training/trainer_test.py", "allennlp/training/metrics/boolean_accuracy.py", "allennlp/training/metrics/categorical_accuracy.py", "allennlp/training/metrics/entropy.py", "allennlp/training/metrics/f1_measure.py", "allennlp/training/metrics/metric.py", "allennlp/training/metrics/span_based_f1_measure.py", "allennlp/training/trainer.py", "requirements.txt", "scripts/create_elmo_embeddings_from_vocab.py", "scripts/write_srl_predictions_to_conll_format.py", ]
"type": "assert"
"numberOfMigration": ""
