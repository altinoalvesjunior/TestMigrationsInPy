"commit_hash": "fa84ae26d62c7ac2ad6dca18b2d8b12ab83bc900",
"commit_link": "https://github.com/huggingface/transformers/commit/fa84ae26d62c7ac2ad6dca18b2d8b12ab83bc900",
"files": ["examples/benchmarks.py", "examples/contrib/run_camembert.py", "examples/contrib/run_openai_gpt.py", "examples/contrib/run_swag.py", "examples/contrib/run_transfo_xl.py", "examples/distillation/distiller.py", "examples/distillation/grouped_batch_sampler.py", "examples/distillation/lm_seqs_dataset.py", "examples/distillation/run_squad_w_distillation.py", "examples/distillation/scripts/binarized_data.py", "examples/distillation/scripts/extract.py", "examples/distillation/scripts/extract_distilbert.py", "examples/distillation/scripts/token_counts.py", "examples/distillation/train.py", "examples/distillation/utils.py", "examples/mm-imdb/run_mmimdb.py", "examples/mm-imdb/utils_mmimdb.py", "examples/pplm/pplm_classification_head.py", "examples/pplm/run_pplm.py", "examples/pplm/run_pplm_discrim_train.py", "examples/run_bertology.py", "examples/run_generation.py", "examples/run_glue.py", "examples/run_lm_finetuning.py", "examples/run_multiple_choice.py", "examples/run_ner.py", "examples/run_squad.py", "examples/run_tf_glue.py", "examples/run_tf_ner.py", "examples/run_xnli.py", "examples/summarization/convert_bertabs_original_pytorch_checkpoint.py", "examples/summarization/modeling_bertabs.py", "examples/summarization/run_summarization.py", "examples/summarization/utils_summarization.py", "examples/summarization/utils_summarization_test.py", "examples/test_examples.py", "examples/utils_multiple_choice.py", "examples/utils_ner.py", "hubconf.py", "setup.py", "templates/adding_a_new_example_script/run_xxx.py", "templates/adding_a_new_example_script/utils_xxx.py", "templates/adding_a_new_model/configuration_xxx.py", "templates/adding_a_new_model/convert_xxx_original_tf_checkpoint_to_pytorch.py", "templates/adding_a_new_model/modeling_tf_xxx.py", "templates/adding_a_new_model/modeling_xxx.py", "templates/adding_a_new_model/tests/modeling_tf_xxx_test.py", "templates/adding_a_new_model/tests/modeling_xxx_test.py", "templates/adding_a_new_model/tests/tokenization_xxx_test.py", "templates/adding_a_new_model/tokenization_xxx.py", "transformers/__init__.py", "transformers/__main__.py", "transformers/commands/__init__.py", "transformers/commands/convert.py", "transformers/commands/download.py", "transformers/commands/run.py", "transformers/commands/serving.py", "transformers/commands/train.py", "transformers/commands/user.py", "transformers/configuration_albert.py", "transformers/configuration_auto.py", "transformers/configuration_bert.py", "transformers/configuration_camembert.py", "transformers/configuration_ctrl.py", "transformers/configuration_distilbert.py", "transformers/configuration_gpt2.py", "transformers/configuration_mmbt.py", "transformers/configuration_openai.py", "transformers/configuration_roberta.py", "transformers/configuration_t5.py", "transformers/configuration_transfo_xl.py", "transformers/configuration_utils.py", "transformers/configuration_xlm.py", "transformers/configuration_xlm_roberta.py", "transformers/configuration_xlnet.py", "transformers/convert_albert_original_tf_checkpoint_to_pytorch.py", "transformers/convert_bert_original_tf_checkpoint_to_pytorch.py", "transformers/convert_bert_pytorch_checkpoint_to_original_tf.py", "transformers/convert_gpt2_original_tf_checkpoint_to_pytorch.py", "transformers/convert_openai_original_tf_checkpoint_to_pytorch.py", "transformers/convert_pytorch_checkpoint_to_tf2.py", "transformers/convert_roberta_original_pytorch_checkpoint_to_pytorch.py", "transformers/convert_t5_original_tf_checkpoint_to_pytorch.py", "transformers/convert_transfo_xl_original_tf_checkpoint_to_pytorch.py", "transformers/convert_xlm_original_pytorch_checkpoint_to_pytorch.py", "transformers/convert_xlnet_original_tf_checkpoint_to_pytorch.py", "transformers/data/__init__.py", "transformers/data/metrics/__init__.py", "transformers/data/metrics/squad_metrics.py", "transformers/data/processors/__init__.py", "transformers/data/processors/glue.py", "transformers/data/processors/squad.py", "transformers/data/processors/utils.py", "transformers/data/processors/xnli.py", "transformers/file_utils.py", "transformers/hf_api.py", "transformers/modelcard.py", "transformers/modeling_albert.py", "transformers/modeling_auto.py", "transformers/modeling_bert.py", "transformers/modeling_camembert.py", "transformers/modeling_ctrl.py", "transformers/modeling_distilbert.py", "transformers/modeling_encoder_decoder.py", "transformers/modeling_gpt2.py", "transformers/modeling_mmbt.py", "transformers/modeling_openai.py", "transformers/modeling_roberta.py", "transformers/modeling_t5.py", "transformers/modeling_tf_albert.py", "transformers/modeling_tf_auto.py", "transformers/modeling_tf_bert.py", "transformers/modeling_tf_ctrl.py", "transformers/modeling_tf_distilbert.py", "transformers/modeling_tf_gpt2.py", "transformers/modeling_tf_openai.py", "transformers/modeling_tf_pytorch_utils.py", "transformers/modeling_tf_roberta.py", "transformers/modeling_tf_t5.py", "transformers/modeling_tf_transfo_xl.py", "transformers/modeling_tf_transfo_xl_utilities.py", "transformers/modeling_tf_utils.py", "transformers/modeling_tf_xlm.py", "transformers/modeling_tf_xlnet.py", "transformers/modeling_transfo_xl.py", "transformers/modeling_transfo_xl_utilities.py", "transformers/modeling_utils.py", "transformers/modeling_xlm.py", "transformers/modeling_xlm_roberta.py", "transformers/modeling_xlnet.py", "transformers/optimization.py", "transformers/optimization_tf.py", "transformers/pipelines.py", "transformers/tests/configuration_common_test.py", "transformers/tests/hf_api_test.py", "transformers/tests/model_card_test.py", "transformers/tests/modeling_albert_test.py", "transformers/tests/modeling_auto_test.py", "transformers/tests/modeling_bert_test.py", "transformers/tests/modeling_common_test.py", "transformers/tests/modeling_ctrl_test.py", "transformers/tests/modeling_distilbert_test.py", "transformers/tests/modeling_encoder_decoder_test.py", "transformers/tests/modeling_gpt2_test.py", "transformers/tests/modeling_openai_test.py", "transformers/tests/modeling_roberta_test.py", "transformers/tests/modeling_t5_test.py", "transformers/tests/modeling_tf_albert_test.py", "transformers/tests/modeling_tf_auto_test.py", "transformers/tests/modeling_tf_bert_test.py", "transformers/tests/modeling_tf_common_test.py", "transformers/tests/modeling_tf_ctrl_test.py", "transformers/tests/modeling_tf_distilbert_test.py", "transformers/tests/modeling_tf_gpt2_test.py", "transformers/tests/modeling_tf_openai_gpt_test.py", "transformers/tests/modeling_tf_roberta_test.py", "transformers/tests/modeling_tf_t5_test.py", "transformers/tests/modeling_tf_transfo_xl_test.py", "transformers/tests/modeling_tf_xlm_test.py", "transformers/tests/modeling_tf_xlnet_test.py", "transformers/tests/modeling_transfo_xl_test.py", "transformers/tests/modeling_xlm_test.py", "transformers/tests/modeling_xlnet_test.py", "transformers/tests/optimization_test.py", "transformers/tests/optimization_tf_test.py", "transformers/tests/pipelines_test.py", "transformers/tests/tokenization_albert_test.py", "transformers/tests/tokenization_auto_test.py", "transformers/tests/tokenization_bert_japanese_test.py", "transformers/tests/tokenization_bert_test.py", "transformers/tests/tokenization_ctrl_test.py", "transformers/tests/tokenization_distilbert_test.py", "transformers/tests/tokenization_gpt2_test.py", "transformers/tests/tokenization_openai_test.py", "transformers/tests/tokenization_roberta_test.py", "transformers/tests/tokenization_t5_test.py", "transformers/tests/tokenization_tests_commons.py", "transformers/tests/tokenization_transfo_xl_test.py", "transformers/tests/tokenization_utils_test.py", "transformers/tests/tokenization_xlm_test.py", "transformers/tests/tokenization_xlnet_test.py", "transformers/tests/utils.py", "transformers/tokenization_albert.py", "transformers/tokenization_auto.py", "transformers/tokenization_bert.py", "transformers/tokenization_bert_japanese.py", "transformers/tokenization_camembert.py", "transformers/tokenization_ctrl.py", "transformers/tokenization_distilbert.py", "transformers/tokenization_gpt2.py", "transformers/tokenization_openai.py", "transformers/tokenization_roberta.py", "transformers/tokenization_t5.py", "transformers/tokenization_transfo_xl.py", "transformers/tokenization_utils.py", "transformers/tokenization_xlm.py", "transformers/tokenization_xlm_roberta.py", "transformers/tokenization_xlnet.py", "utils/download_glue_data.py", "utils/link_tester.py", ]
"type": "assert, testcase"
"numberOfMigration": ""
