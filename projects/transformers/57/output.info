"commit_hash": "415e9a0980b00ef230d850bff7ecf0021c52640d",
"commit_link": "https://github.com/huggingface/transformers/commit/415e9a0980b00ef230d850bff7ecf0021c52640d",
"files": ["docs/source/ja/troubleshooting.md", "examples/tensorflow/image-classification/run_image_classification.py", "examples/tensorflow/language-modeling-tpu/run_mlm.py", "examples/tensorflow/question-answering/run_qa.py", "examples/tensorflow/test_tensorflow_examples.py", "examples/tensorflow/text-classification/run_text_classification.py", "src/transformers/activations_tf.py", "src/transformers/keras_callbacks.py", "src/transformers/modelcard.py", "src/transformers/modeling_tf_pytorch_utils.py", "src/transformers/modeling_tf_utils.py", "src/transformers/models/albert/modeling_tf_albert.py", "src/transformers/models/bart/modeling_tf_bart.py", "src/transformers/models/bert/convert_bert_pytorch_checkpoint_to_original_tf.py", "src/transformers/models/bert/modeling_tf_bert.py", "src/transformers/models/bert/tokenization_bert_tf.py", "src/transformers/models/blenderbot/modeling_tf_blenderbot.py", "src/transformers/models/blenderbot_small/modeling_tf_blenderbot_small.py", "src/transformers/models/blip/modeling_tf_blip.py", "src/transformers/models/blip/modeling_tf_blip_text.py", "src/transformers/models/camembert/modeling_tf_camembert.py", "src/transformers/models/clip/modeling_tf_clip.py", "src/transformers/models/convbert/modeling_tf_convbert.py", "src/transformers/models/convnext/modeling_tf_convnext.py", "src/transformers/models/convnextv2/modeling_tf_convnextv2.py", "src/transformers/models/ctrl/modeling_tf_ctrl.py", "src/transformers/models/cvt/modeling_tf_cvt.py", "src/transformers/models/data2vec/modeling_tf_data2vec_vision.py", "src/transformers/models/deberta/modeling_tf_deberta.py", "src/transformers/models/deberta_v2/modeling_tf_deberta_v2.py", "src/transformers/models/deit/modeling_tf_deit.py", "src/transformers/models/deprecated/transfo_xl/modeling_tf_transfo_xl.py", "src/transformers/models/deprecated/transfo_xl/modeling_tf_transfo_xl_utilities.py", "src/transformers/models/distilbert/modeling_tf_distilbert.py", "src/transformers/models/dpr/modeling_tf_dpr.py", "src/transformers/models/efficientformer/modeling_tf_efficientformer.py", "src/transformers/models/electra/modeling_tf_electra.py", "src/transformers/models/encoder_decoder/modeling_tf_encoder_decoder.py", "src/transformers/models/esm/modeling_tf_esm.py", "src/transformers/models/flaubert/modeling_tf_flaubert.py", "src/transformers/models/funnel/modeling_tf_funnel.py", "src/transformers/models/gpt2/modeling_tf_gpt2.py", "src/transformers/models/gpt2/tokenization_gpt2_tf.py", "src/transformers/models/gptj/modeling_tf_gptj.py", "src/transformers/models/groupvit/modeling_tf_groupvit.py", "src/transformers/models/hubert/modeling_tf_hubert.py", "src/transformers/models/layoutlm/modeling_tf_layoutlm.py", "src/transformers/models/layoutlmv3/modeling_tf_layoutlmv3.py", "src/transformers/models/led/modeling_tf_led.py", "src/transformers/models/longformer/modeling_tf_longformer.py", "src/transformers/models/lxmert/modeling_tf_lxmert.py", "src/transformers/models/marian/modeling_tf_marian.py", "src/transformers/models/mbart/modeling_tf_mbart.py", "src/transformers/models/mobilebert/modeling_tf_mobilebert.py", "src/transformers/models/mobilevit/modeling_tf_mobilevit.py", "src/transformers/models/mpnet/modeling_tf_mpnet.py", "src/transformers/models/openai/modeling_tf_openai.py", "src/transformers/models/opt/modeling_tf_opt.py", "src/transformers/models/pegasus/modeling_tf_pegasus.py", "src/transformers/models/rag/modeling_tf_rag.py", "src/transformers/models/regnet/modeling_tf_regnet.py", "src/transformers/models/rembert/modeling_tf_rembert.py", "src/transformers/models/resnet/modeling_tf_resnet.py", "src/transformers/models/roberta/modeling_tf_roberta.py", "src/transformers/models/roberta_prelayernorm/modeling_tf_roberta_prelayernorm.py", "src/transformers/models/roformer/modeling_tf_roformer.py", "src/transformers/models/sam/modeling_tf_sam.py", "src/transformers/models/segformer/modeling_tf_segformer.py", "src/transformers/models/speech_to_text/modeling_tf_speech_to_text.py", "src/transformers/models/swin/modeling_tf_swin.py", "src/transformers/models/t5/modeling_tf_t5.py", "src/transformers/models/tapas/modeling_tf_tapas.py", "src/transformers/models/vision_encoder_decoder/modeling_tf_vision_encoder_decoder.py", "src/transformers/models/vision_text_dual_encoder/modeling_tf_vision_text_dual_encoder.py", "src/transformers/models/vit/modeling_tf_vit.py", "src/transformers/models/vit_mae/modeling_tf_vit_mae.py", "src/transformers/models/wav2vec2/modeling_tf_wav2vec2.py", "src/transformers/models/whisper/modeling_tf_whisper.py", "src/transformers/models/xglm/modeling_tf_xglm.py", "src/transformers/models/xlm/modeling_tf_xlm.py", "src/transformers/models/xlm_roberta/modeling_tf_xlm_roberta.py", "src/transformers/models/xlnet/modeling_tf_xlnet.py", "src/transformers/optimization_tf.py", "src/transformers/training_args_tf.py", "templates/adding_a_new_model/cookiecutter-template-{{cookiecutter.modelname}}/modeling_tf_{{cookiecutter.lowercase_modelname}}.py", "tests/generation/test_tf_utils.py", "tests/models/bert/test_tokenization_bert_tf.py", "tests/models/blip/test_modeling_tf_blip.py", "tests/models/clip/test_modeling_tf_clip.py", "tests/models/convbert/test_modeling_tf_convbert.py", "tests/models/ctrl/test_modeling_tf_ctrl.py", "tests/models/cvt/test_modeling_tf_cvt.py", "tests/models/data2vec/test_modeling_tf_data2vec_vision.py", "tests/models/deit/test_modeling_tf_deit.py", "tests/models/efficientformer/test_modeling_tf_efficientformer.py", "tests/models/encoder_decoder/test_modeling_tf_encoder_decoder.py", "tests/models/esm/test_modeling_tf_esm.py", "tests/models/gpt2/test_tokenization_gpt2_tf.py", "tests/models/groupvit/test_modeling_tf_groupvit.py", "tests/models/sam/test_modeling_tf_sam.py", "tests/models/swin/test_modeling_tf_swin.py", "tests/models/vision_encoder_decoder/test_modeling_tf_vision_encoder_decoder.py", "tests/models/vit/test_modeling_tf_vit.py", "tests/models/vit_mae/test_modeling_tf_vit_mae.py", "tests/sagemaker/scripts/tensorflow/run_tf.py", "tests/sagemaker/scripts/tensorflow/run_tf_dist.py", "tests/test_modeling_tf_common.py", "tests/test_modeling_tf_utils.py", "tests/utils/test_modeling_tf_core.py", ]
"type": "assert"
"numberOfMigration": ""
