"commit_hash": "82df48934eba1df9a1ed3be98aaace8eada59e6e",
"commit_link": "https://github.com/scikit-learn/scikit-learn/commit/82df48934eba1df9a1ed3be98aaace8eada59e6e",
"files": [".github/scripts/label_title_regex.py", "asv_benchmarks/benchmarks/cluster.py", "asv_benchmarks/benchmarks/common.py", "asv_benchmarks/benchmarks/datasets.py", "asv_benchmarks/benchmarks/decomposition.py", "asv_benchmarks/benchmarks/ensemble.py", "asv_benchmarks/benchmarks/linear_model.py", "asv_benchmarks/benchmarks/manifold.py", "asv_benchmarks/benchmarks/metrics.py", "asv_benchmarks/benchmarks/model_selection.py", "asv_benchmarks/benchmarks/neighbors.py", "asv_benchmarks/benchmarks/svm.py", "asv_benchmarks/benchmarks/utils.py", "azure-pipelines.yml", "benchmarks/bench_20newsgroups.py", "benchmarks/bench_covertype.py", "benchmarks/bench_feature_expansions.py", "benchmarks/bench_glm.py", "benchmarks/bench_glmnet.py", "benchmarks/bench_hist_gradient_boosting.py", "benchmarks/bench_hist_gradient_boosting_adult.py", "benchmarks/bench_hist_gradient_boosting_categorical_only.py", "benchmarks/bench_hist_gradient_boosting_higgsboson.py", "benchmarks/bench_hist_gradient_boosting_threading.py", "benchmarks/bench_isolation_forest.py", "benchmarks/bench_isotonic.py", "benchmarks/bench_kernel_pca_solvers_time_vs_n_components.py", "benchmarks/bench_kernel_pca_solvers_time_vs_n_samples.py", "benchmarks/bench_lasso.py", "benchmarks/bench_lof.py", "benchmarks/bench_mnist.py", "benchmarks/bench_multilabel_metrics.py", "benchmarks/bench_online_ocsvm.py", "benchmarks/bench_plot_fastkmeans.py", "benchmarks/bench_plot_hierarchical.py", "benchmarks/bench_plot_incremental_pca.py", "benchmarks/bench_plot_lasso_path.py", "benchmarks/bench_plot_neighbors.py", "benchmarks/bench_plot_nmf.py", "benchmarks/bench_plot_omp_lars.py", "benchmarks/bench_plot_parallel_pairwise.py", "benchmarks/bench_plot_polynomial_kernel_approximation.py", "benchmarks/bench_plot_randomized_svd.py", "benchmarks/bench_plot_svd.py", "benchmarks/bench_plot_ward.py", "benchmarks/bench_random_projections.py", "benchmarks/bench_rcv1_logreg_convergence.py", "benchmarks/bench_saga.py", "benchmarks/bench_sample_without_replacement.py", "benchmarks/bench_sgd_regression.py", "benchmarks/bench_sparsify.py", "benchmarks/bench_text_vectorizers.py", "benchmarks/bench_tree.py", "benchmarks/bench_tsne_mnist.py", "benchmarks/plot_tsne_mnist.py", "build_tools/circle/list_versions.py", "build_tools/generate_authors_table.py", "build_tools/github/check_wheels.py", "build_tools/github/vendor.py", "doc/conf.py", "doc/conftest.py", "doc/sphinxext/add_toctree_functions.py", "doc/sphinxext/custom_references_resolver.py", "doc/sphinxext/github_link.py", "maint_tools/check_pxd_in_installation.py", "maint_tools/sort_whats_new.py", "maint_tools/test_docstrings.py", "setup.py", "sklearn/__check_build/__init__.py", "sklearn/__check_build/setup.py", "sklearn/__init__.py", "sklearn/_build_utils/__init__.py", "sklearn/_build_utils/openmp_helpers.py", "sklearn/_build_utils/pre_build_helpers.py", "sklearn/_config.py", "sklearn/_loss/glm_distribution.py", "sklearn/_loss/tests/test_glm_distribution.py", "sklearn/_min_dependencies.py", "sklearn/base.py", "sklearn/calibration.py", "sklearn/cluster/__init__.py", "sklearn/cluster/_affinity_propagation.py", "sklearn/cluster/_agglomerative.py", "sklearn/cluster/_bicluster.py", "sklearn/cluster/_birch.py", "sklearn/cluster/_dbscan.py", "sklearn/cluster/_feature_agglomeration.py", "sklearn/cluster/_kmeans.py", "sklearn/cluster/_mean_shift.py", "sklearn/cluster/_optics.py", "sklearn/cluster/_spectral.py", "sklearn/cluster/setup.py", "sklearn/cluster/tests/common.py", "sklearn/cluster/tests/test_affinity_propagation.py", "sklearn/cluster/tests/test_bicluster.py", "sklearn/cluster/tests/test_birch.py", "sklearn/cluster/tests/test_dbscan.py", "sklearn/cluster/tests/test_feature_agglomeration.py", "sklearn/cluster/tests/test_hierarchical.py", "sklearn/cluster/tests/test_k_means.py", "sklearn/cluster/tests/test_mean_shift.py", "sklearn/cluster/tests/test_optics.py", "sklearn/cluster/tests/test_spectral.py", "sklearn/compose/__init__.py", "sklearn/compose/_column_transformer.py", "sklearn/compose/_target.py", "sklearn/compose/tests/test_column_transformer.py", "sklearn/compose/tests/test_target.py", "sklearn/conftest.py", "sklearn/covariance/__init__.py", "sklearn/covariance/_elliptic_envelope.py", "sklearn/covariance/_empirical_covariance.py", "sklearn/covariance/_graph_lasso.py", "sklearn/covariance/_robust_covariance.py", "sklearn/covariance/_shrunk_covariance.py", "sklearn/covariance/tests/test_covariance.py", "sklearn/covariance/tests/test_elliptic_envelope.py", "sklearn/covariance/tests/test_graphical_lasso.py", "sklearn/covariance/tests/test_robust_covariance.py", "sklearn/cross_decomposition/__init__.py", "sklearn/cross_decomposition/_pls.py", "sklearn/cross_decomposition/tests/test_pls.py", "sklearn/datasets/__init__.py", "sklearn/datasets/_base.py", "sklearn/datasets/_california_housing.py", "sklearn/datasets/_covtype.py", "sklearn/datasets/_kddcup99.py", "sklearn/datasets/_lfw.py", "sklearn/datasets/_olivetti_faces.py", "sklearn/datasets/_openml.py", "sklearn/datasets/_rcv1.py", "sklearn/datasets/_samples_generator.py", "sklearn/datasets/_species_distributions.py", "sklearn/datasets/_svmlight_format_io.py", "sklearn/datasets/_twenty_newsgroups.py", "sklearn/datasets/setup.py", "sklearn/datasets/tests/conftest.py", "sklearn/datasets/tests/test_20news.py", "sklearn/datasets/tests/test_base.py", "sklearn/datasets/tests/test_california_housing.py", "sklearn/datasets/tests/test_common.py", "sklearn/datasets/tests/test_covtype.py", "sklearn/datasets/tests/test_kddcup99.py", "sklearn/datasets/tests/test_lfw.py", "sklearn/datasets/tests/test_olivetti_faces.py", "sklearn/datasets/tests/test_openml.py", "sklearn/datasets/tests/test_rcv1.py", "sklearn/datasets/tests/test_samples_generator.py", "sklearn/datasets/tests/test_svmlight_format.py", "sklearn/decomposition/__init__.py", "sklearn/decomposition/_base.py", "sklearn/decomposition/_dict_learning.py", "sklearn/decomposition/_factor_analysis.py", "sklearn/decomposition/_fastica.py", "sklearn/decomposition/_incremental_pca.py", "sklearn/decomposition/_kernel_pca.py", "sklearn/decomposition/_lda.py", "sklearn/decomposition/_nmf.py", "sklearn/decomposition/_pca.py", "sklearn/decomposition/_sparse_pca.py", "sklearn/decomposition/_truncated_svd.py", "sklearn/decomposition/setup.py", "sklearn/decomposition/tests/test_dict_learning.py", "sklearn/decomposition/tests/test_factor_analysis.py", "sklearn/decomposition/tests/test_fastica.py", "sklearn/decomposition/tests/test_incremental_pca.py", "sklearn/decomposition/tests/test_kernel_pca.py", "sklearn/decomposition/tests/test_nmf.py", "sklearn/decomposition/tests/test_online_lda.py", "sklearn/decomposition/tests/test_pca.py", "sklearn/decomposition/tests/test_sparse_pca.py", "sklearn/decomposition/tests/test_truncated_svd.py", "sklearn/discriminant_analysis.py", "sklearn/dummy.py", "sklearn/ensemble/__init__.py", "sklearn/ensemble/_bagging.py", "sklearn/ensemble/_base.py", "sklearn/ensemble/_forest.py", "sklearn/ensemble/_gb.py", "sklearn/ensemble/_gb_losses.py", "sklearn/ensemble/_hist_gradient_boosting/binning.py", "sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py", "sklearn/ensemble/_hist_gradient_boosting/grower.py", "sklearn/ensemble/_hist_gradient_boosting/loss.py", "sklearn/ensemble/_hist_gradient_boosting/predictor.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_binning.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_bitset.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_compare_lightgbm.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_grower.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_histogram.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_loss.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_monotonic_contraints.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_predictor.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_splitting.py", "sklearn/ensemble/_hist_gradient_boosting/tests/test_warm_start.py", "sklearn/ensemble/_iforest.py", "sklearn/ensemble/_stacking.py", "sklearn/ensemble/_voting.py", "sklearn/ensemble/_weight_boosting.py", "sklearn/ensemble/setup.py", "sklearn/ensemble/tests/test_bagging.py", "sklearn/ensemble/tests/test_base.py", "sklearn/ensemble/tests/test_common.py", "sklearn/ensemble/tests/test_forest.py", "sklearn/ensemble/tests/test_gradient_boosting.py", "sklearn/ensemble/tests/test_gradient_boosting_loss_functions.py", "sklearn/ensemble/tests/test_iforest.py", "sklearn/ensemble/tests/test_stacking.py", "sklearn/ensemble/tests/test_voting.py", "sklearn/ensemble/tests/test_weight_boosting.py", "sklearn/exceptions.py", "sklearn/experimental/enable_halving_search_cv.py", "sklearn/experimental/enable_iterative_imputer.py", "sklearn/experimental/tests/test_enable_successive_halving.py", "sklearn/feature_extraction/__init__.py", "sklearn/feature_extraction/_dict_vectorizer.py", "sklearn/feature_extraction/_hash.py", "sklearn/feature_extraction/_stop_words.py", "sklearn/feature_extraction/image.py", "sklearn/feature_extraction/setup.py", "sklearn/feature_extraction/tests/test_dict_vectorizer.py", "sklearn/feature_extraction/tests/test_feature_hasher.py", "sklearn/feature_extraction/tests/test_image.py", "sklearn/feature_extraction/tests/test_text.py", "sklearn/feature_extraction/text.py", "sklearn/feature_selection/__init__.py", "sklearn/feature_selection/_base.py", "sklearn/feature_selection/_from_model.py", "sklearn/feature_selection/_mutual_info.py", "sklearn/feature_selection/_rfe.py", "sklearn/feature_selection/_sequential.py", "sklearn/feature_selection/_univariate_selection.py", "sklearn/feature_selection/_variance_threshold.py", "sklearn/feature_selection/tests/test_base.py", "sklearn/feature_selection/tests/test_chi2.py", "sklearn/feature_selection/tests/test_feature_select.py", "sklearn/feature_selection/tests/test_from_model.py", "sklearn/feature_selection/tests/test_mutual_info.py", "sklearn/feature_selection/tests/test_rfe.py", "sklearn/feature_selection/tests/test_sequential.py", "sklearn/feature_selection/tests/test_variance_threshold.py", "sklearn/gaussian_process/__init__.py", "sklearn/gaussian_process/_gpc.py", "sklearn/gaussian_process/_gpr.py", "sklearn/gaussian_process/kernels.py", "sklearn/gaussian_process/tests/_mini_sequence_kernel.py", "sklearn/gaussian_process/tests/test_gpc.py", "sklearn/gaussian_process/tests/test_gpr.py", "sklearn/gaussian_process/tests/test_kernels.py", "sklearn/impute/__init__.py", "sklearn/impute/_base.py", "sklearn/impute/_iterative.py", "sklearn/impute/_knn.py", "sklearn/impute/tests/test_base.py", "sklearn/impute/tests/test_common.py", "sklearn/impute/tests/test_impute.py", "sklearn/impute/tests/test_knn.py", "sklearn/inspection/__init__.py", "sklearn/inspection/_partial_dependence.py", "sklearn/inspection/_permutation_importance.py", "sklearn/inspection/_plot/partial_dependence.py", "sklearn/inspection/_plot/tests/test_plot_partial_dependence.py", "sklearn/inspection/setup.py", "sklearn/inspection/tests/test_partial_dependence.py", "sklearn/inspection/tests/test_permutation_importance.py", "sklearn/isotonic.py", "sklearn/kernel_approximation.py", "sklearn/kernel_ridge.py", "sklearn/linear_model/__init__.py", "sklearn/linear_model/_base.py", "sklearn/linear_model/_bayes.py", "sklearn/linear_model/_coordinate_descent.py", "sklearn/linear_model/_glm/__init__.py", "sklearn/linear_model/_glm/glm.py", "sklearn/linear_model/_glm/tests/test_glm.py", "sklearn/linear_model/_glm/tests/test_link.py", "sklearn/linear_model/_huber.py", "sklearn/linear_model/_least_angle.py", "sklearn/linear_model/_logistic.py", "sklearn/linear_model/_omp.py", "sklearn/linear_model/_passive_aggressive.py", "sklearn/linear_model/_perceptron.py", "sklearn/linear_model/_quantile.py", "sklearn/linear_model/_ransac.py", "sklearn/linear_model/_ridge.py", "sklearn/linear_model/_sag.py", "sklearn/linear_model/_stochastic_gradient.py", "sklearn/linear_model/_theil_sen.py", "sklearn/linear_model/setup.py", "sklearn/linear_model/tests/test_base.py", "sklearn/linear_model/tests/test_bayes.py", "sklearn/linear_model/tests/test_common.py", "sklearn/linear_model/tests/test_coordinate_descent.py", "sklearn/linear_model/tests/test_huber.py", "sklearn/linear_model/tests/test_least_angle.py", "sklearn/linear_model/tests/test_logistic.py", "sklearn/linear_model/tests/test_omp.py", "sklearn/linear_model/tests/test_passive_aggressive.py", "sklearn/linear_model/tests/test_perceptron.py", ]
"type": "skip, add Param"
"numberOfMigration": ""
