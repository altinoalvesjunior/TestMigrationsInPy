"commit_hash": "fbdae968f131f218395bd6dede55985c3f726ce0",
"commit_link": "https://github.com/open-mmlab/mmdetection/commit/fbdae968f131f218395bd6dede55985c3f726ce0",
"files": ["README.md", "README_zh-CN.md", "configs/_base_/datasets/ade20k_instance.py", "configs/_base_/datasets/ade20k_panoptic.py", "configs/_base_/datasets/ade20k_semantic.py", "configs/_base_/datasets/coco_caption.py", "configs/_base_/datasets/coco_semantic.py", "configs/_base_/datasets/refcoco+.py", "configs/_base_/datasets/refcoco.py", "configs/_base_/datasets/refcocog.py", "configs/glip/glip_atss_swin-t_a_fpn_dyhead_pretrain_obj365.py", "demo/image_demo.py", "demo/multimodal_demo.py", "docs/en/user_guides/dataset_prepare.md", "docs/zh_cn/user_guides/dataset_prepare.md", "mmdet/apis/det_inferencer.py", "mmdet/apis/inference.py", "mmdet/datasets/__init__.py", "mmdet/datasets/ade20k.py", "mmdet/datasets/base_det_dataset.py", "mmdet/datasets/base_semseg_dataset.py", "mmdet/datasets/coco.py", "mmdet/datasets/coco_caption.py", "mmdet/datasets/coco_panoptic.py", "mmdet/datasets/coco_semantic.py", "mmdet/datasets/refcoco.py", "mmdet/datasets/transforms/__init__.py", "mmdet/datasets/transforms/formatting.py", "mmdet/datasets/transforms/loading.py", "mmdet/datasets/transforms/transforms.py", "mmdet/evaluation/metrics/__init__.py", "mmdet/evaluation/metrics/coco_caption_metric.py", "mmdet/evaluation/metrics/coco_panoptic_metric.py", "mmdet/evaluation/metrics/refseg_metric.py", "mmdet/evaluation/metrics/semseg_metric.py", "mmdet/models/detectors/glip.py", "mmdet/testing/_utils.py", "mmdet/visualization/local_visualizer.py", "projects/XDecoder/README.md", "projects/XDecoder/configs/_base_/xdecoder-tiny_caption.py", "projects/XDecoder/configs/_base_/xdecoder-tiny_open-vocab-instance.py", "projects/XDecoder/configs/_base_/xdecoder-tiny_open-vocab-panoptic.py", "projects/XDecoder/configs/_base_/xdecoder-tiny_open-vocab-semseg.py", "projects/XDecoder/configs/_base_/xdecoder-tiny_ref-seg.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_caption_coco2014.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-instance_ade20k.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-instance_coco.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-panoptic_ade20k.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-panoptic_coco.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-ref-seg_refcoco+.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-ref-seg_refcoco.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-ref-seg_refcocog.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-semseg_ade20k.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_open-vocab-semseg_coco.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_ref-caption.py", "projects/XDecoder/configs/xdecoder-tiny_zeroshot_text-image-retrieval.py", "projects/XDecoder/demo.py", "projects/XDecoder/xdecoder/__init__.py", "projects/XDecoder/xdecoder/focalnet.py", "projects/XDecoder/xdecoder/inference/__init__.py", "projects/XDecoder/xdecoder/inference/image_caption.py", "projects/XDecoder/xdecoder/inference/texttoimage_regionretrieval_inferencer.py", "projects/XDecoder/xdecoder/language_model.py", "projects/XDecoder/xdecoder/pixel_decoder.py", "projects/XDecoder/xdecoder/transformer_blocks.py", "projects/XDecoder/xdecoder/transformer_decoder.py", "projects/XDecoder/xdecoder/unified_head.py", "projects/XDecoder/xdecoder/utils.py", "projects/XDecoder/xdecoder/xdecoder.py", "projects/gradio_demo/README.md", "projects/gradio_demo/launch.py", "requirements/multimodal.txt", "setup.cfg", "tests/test_apis/test_inference.py", "tests/test_datasets/test_transforms/test_loading.py", "tests/test_datasets/test_transforms/test_transforms.py", "tests/test_models/test_detectors/test_glip.py", "tests/test_models/test_detectors/test_single_stage.py", "tests/test_models/test_detectors/test_single_stage_instance_seg.py", "tools/dataset_converters/ade20k2coco.py", "tools/dataset_converters/coco_stuff164k.py", "tools/dataset_converters/prepare_coco_semantic_annos_from_panoptic_annos.py", "tools/misc/download_dataset.py", ]
"type": "assert"
"numberOfMigration": ""
